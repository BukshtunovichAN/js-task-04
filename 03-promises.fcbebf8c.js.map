{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,OAAQF,SAASC,cAAc,mBAC/BE,MAAOH,SAASC,cAAc,kBAC9BG,KAAMJ,SAASC,cAAc,kBAG/BH,EAAKC,KAAKM,iBAAiB,UA0B3B,SAAwBC,GACtBA,EAAIC,iBACJ,IAAK,IAAIC,EAAI,EAAGA,GAAKC,EAAWD,IAC9BE,EAAcF,EAAGG,GACdC,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUX,EAAKU,EAALV,MACjBY,EAAAnB,GAASoB,OAAOC,QACd,uBAAwCC,OAAfJ,EAAS,QAAYI,OAANf,EAAM,M,IAGjDgB,OAAM,SAAAN,G,IAAGC,EAAQD,EAARC,SAAUX,EAAKU,EAALV,MAClBY,EAAAnB,GAASoB,OAAOI,QACd,sBAAqCF,OAAfJ,EAAS,QAAYI,OAANf,EAAM,M,IAGjDQ,GAAYU,C,IAvChBvB,EAAKC,KAAKM,iBAAiB,UAAU,WACnCM,GAAYb,EAAKK,MAAMmB,MACvBD,GAAWvB,EAAKM,KAAKkB,MACrBb,GAAaX,EAAKI,OAAOoB,K,IAG3B,IAAIX,EAAW,EACXU,EAAU,EACVZ,EAAY,EAEhB,SAASC,EAAcI,EAAUX,GAC/B,OAAO,IAAIoB,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EAEFF,EAAQ,CAAEV,WAAUX,UAGpBsB,EAAO,CAAEX,WAAUX,S,GAEpBQ,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n};\n\nrefs.form.addEventListener('submit', promisesNotify);\nrefs.form.addEventListener('change', () => {\n  inpDelay = +refs.delay.value;\n  inpStep = +refs.step.value;\n  inpAmount = +refs.amount.value;\n});\n\nlet inpDelay = 0;\nlet inpStep = 0;\nlet inpAmount = 0;\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, regect) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        regect({ position, delay });\n      }\n    }, inpDelay);\n  });\n}\n\nfunction promisesNotify(arg) {\n  arg.preventDefault();\n  for (let i = 1; i <= inpAmount; i++) {\n    createPromise(i, inpDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    inpDelay += inpStep;\n  }\n}\n"],"names":["$ejkSG","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","amount","delay","step","addEventListener","arg","preventDefault","i","$ce04d3a99e08e73b$var$inpAmount","$ce04d3a99e08e73b$var$createPromise","$ce04d3a99e08e73b$var$inpDelay","then","param","position","$parcel$interopDefault","Notify","success","concat","catch","failure","$ce04d3a99e08e73b$var$inpStep","value","Promise","resolve","regect","shouldResolve","Math","random","setTimeout"],"version":3,"file":"03-promises.fcbebf8c.js.map"}